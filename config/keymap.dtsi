#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


#define DEF 0
#define LOW 1
#define RSE 2
#define ADJ 3

&mt {
    tapping-term-ms = <150>;
};

&sk {
    release-after-ms = <500>;
};

/ {
        /* conditional_layers { */
        /*     compatible = "zmk,conditional-layers"; */
        /*     tri_layer { */
        /*         if-layers = <LOW RSE>; */
        /*         then-layer = <ADJ>; */
        /*     }; */
        /* }; */

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q        |  W       |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | "|"  |
// |  ESC |  A        |  S       |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  LCTRL/Z  |  LALT/X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | SPC | BKSP/LWR |   | RSE | ENT  | ALT |
                        bindings = <
   &kp TAB   &kp Q        &kp W      &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O        &kp P          &kp PIPE
   &kp ESC   &kp A        &kp S      &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L        &kp SEMI       &kp SQT
   &sk LSHFT &mt LCTRL Z  &mt LALT X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &mt RALT DOT &mt RCTRL FSLH &kp ESC
                  &kp LGUI &kp SPACE &lt LOW BKSP   &lt 2 DEL  &kp RET &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans  &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	      &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };
        };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                    	     &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | BOOT  |           |      |      |      |      |      |      |      |      |      |      | BOOT  |
// | RESET |  RGB_TOG  |      |      |      |      |      |      |      |      |      |      | RESET |
// | BTCLR |  BT1      | BT2  | BT 3 | BT4  | BT5  |      |      |      |      |      |      |       |
//                 |     |     |     |        |      |     |     |
                        bindings = <
   &bootloader &rgb_ug RGB_TOG &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI             &trans &trans &trans &trans &trans &bootloader
   &reset      &rgb_ug RGB_EFF &rgb_ug RGB_HUD  &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD             &trans &trans &trans &trans &trans &reset
   &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                &trans &trans &trans &trans &trans &trans
                                                              &ext_power EP_TOG &trans &trans               &trans &trans &ext_power EP_TOG 
                        >;
                };
};
